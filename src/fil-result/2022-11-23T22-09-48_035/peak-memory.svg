<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="940" onload="init(evt)" viewBox="0 0 1200 940" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno">
    <!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.-->
    <!--NOTES: -->
    <defs>
        <linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
            <stop stop-color="#eeeeee" offset="5%"/>
            <stop stop-color="#eeeeb0" offset="95%"/>
        </linearGradient>
    </defs>
    <style type="text/css">
text { font-family:"monospace"; font-size:16px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:21px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style>
    <script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 16;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script>
    <rect x="0" y="0" width="100%" height="940" fill="url(#background)"/>
    <text id="title" x="50.0000%" y="32.00">Peak Tracked Memory Usage (4870.2 MiB)</text>
    <text id="subtitle" x="50.0000%" y="64.00">Made with the Fil profiler. <a href="https://pythonspeed.com/fil/" style="text-decoration: underline;" target="_parent">Try it on your code!</a></text>
    <text id="details" x="10" y="84.00"> </text>
    <text id="unzoom" class="hide" x="10" y="32.00">Reset Zoom</text>
    <text id="search" x="1090" y="32.00">Search</text>
    <text id="matched" x="1090" y="927.00"> </text>
    <svg id="frames" x="10" width="1180" total_samples="5055712656">
        <g>
            <title>/home/gc28692/anaconda3/envs/rwn/lib/python3.9/site-packages/torch/__init__.py:202 (&lt;module&gt;) (32,866,722 bytes, 0.65%)</title>
            <rect x="0.0450%" y="386" width="0.6501%" height="21" fill="rgb(255,237,237)" fg:x="2273206" fg:w="32866722"/>
            <text x="0.2950%" y="399.50"></text>
        </g>
        <g>
            <title>    from torch._C import *  # noqa: F403 (32,866,722 bytes, 0.65%)</title>
            <rect x="0.0450%" y="408" width="0.6501%" height="21" fill="rgb(255,237,237)" fg:x="2273206" fg:w="32866722"/>
            <text x="0.2950%" y="421.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (32,866,722 bytes, 0.65%)</title>
            <rect x="0.0450%" y="430" width="0.6501%" height="21" fill="rgb(255,237,237)" fg:x="2273206" fg:w="32866722"/>
            <text x="0.2950%" y="443.50"></text>
        </g>
        <g>
            <title> (32,866,722 bytes, 0.65%)</title>
            <rect x="0.0450%" y="452" width="0.6501%" height="21" fill="rgb(255,237,237)" fg:x="2273206" fg:w="32866722"/>
            <text x="0.2950%" y="465.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (32,866,722 bytes, 0.65%)</title>
            <rect x="0.0450%" y="474" width="0.6501%" height="21" fill="rgb(255,237,237)" fg:x="2273206" fg:w="32866722"/>
            <text x="0.2950%" y="487.50"></text>
        </g>
        <g>
            <title> (32,866,722 bytes, 0.65%)</title>
            <rect x="0.0450%" y="496" width="0.6501%" height="21" fill="rgb(255,237,237)" fg:x="2273206" fg:w="32866722"/>
            <text x="0.2950%" y="509.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:666 (_load_unlocked) (32,866,722 bytes, 0.65%)</title>
            <rect x="0.0450%" y="518" width="0.6501%" height="21" fill="rgb(255,237,237)" fg:x="2273206" fg:w="32866722"/>
            <text x="0.2950%" y="531.50"></text>
        </g>
        <g>
            <title> (32,866,722 bytes, 0.65%)</title>
            <rect x="0.0450%" y="540" width="0.6501%" height="21" fill="rgb(255,237,237)" fg:x="2273206" fg:w="32866722"/>
            <text x="0.2950%" y="553.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:565 (module_from_spec) (32,866,722 bytes, 0.65%)</title>
            <rect x="0.0450%" y="562" width="0.6501%" height="21" fill="rgb(255,237,237)" fg:x="2273206" fg:w="32866722"/>
            <text x="0.2950%" y="575.50"></text>
        </g>
        <g>
            <title> (32,866,722 bytes, 0.65%)</title>
            <rect x="0.0450%" y="584" width="0.6501%" height="21" fill="rgb(255,237,237)" fg:x="2273206" fg:w="32866722"/>
            <text x="0.2950%" y="597.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:1173 (create_module) (32,866,722 bytes, 0.65%)</title>
            <rect x="0.0450%" y="606" width="0.6501%" height="21" fill="rgb(255,237,237)" fg:x="2273206" fg:w="32866722"/>
            <text x="0.2950%" y="619.50"></text>
        </g>
        <g>
            <title> (32,866,722 bytes, 0.65%)</title>
            <rect x="0.0450%" y="628" width="0.6501%" height="21" fill="rgb(255,237,237)" fg:x="2273206" fg:w="32866722"/>
            <text x="0.2950%" y="641.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (32,866,722 bytes, 0.65%)</title>
            <rect x="0.0450%" y="650" width="0.6501%" height="21" fill="rgb(255,237,237)" fg:x="2273206" fg:w="32866722"/>
            <text x="0.2950%" y="663.50"></text>
        </g>
        <g>
            <title> (32,866,722 bytes, 0.65%)</title>
            <rect x="0.0450%" y="672" width="0.6501%" height="21" fill="rgb(255,237,237)" fg:x="2273206" fg:w="32866722"/>
            <text x="0.2950%" y="685.50"></text>
        </g>
        <g>
            <title>train_no_student.py:17 (&lt;module&gt;) (45,809,266 bytes, 0.91%)</title>
            <rect x="0.0000%" y="122" width="0.9061%" height="21" fill="rgb(255,235,235)" fg:x="0" fg:w="45809266"/>
            <text x="0.2500%" y="135.50"></text>
        </g>
        <g>
            <title>from torch import no_grad,save,load (45,809,266 bytes, 0.91%)</title>
            <rect x="0.0000%" y="144" width="0.9061%" height="21" fill="rgb(255,235,235)" fg:x="0" fg:w="45809266"/>
            <text x="0.2500%" y="157.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (45,809,266 bytes, 0.91%)</title>
            <rect x="0.0000%" y="166" width="0.9061%" height="21" fill="rgb(255,235,235)" fg:x="0" fg:w="45809266"/>
            <text x="0.2500%" y="179.50"></text>
        </g>
        <g>
            <title> (45,809,266 bytes, 0.91%)</title>
            <rect x="0.0000%" y="188" width="0.9061%" height="21" fill="rgb(255,235,235)" fg:x="0" fg:w="45809266"/>
            <text x="0.2500%" y="201.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (45,809,266 bytes, 0.91%)</title>
            <rect x="0.0000%" y="210" width="0.9061%" height="21" fill="rgb(255,235,235)" fg:x="0" fg:w="45809266"/>
            <text x="0.2500%" y="223.50"></text>
        </g>
        <g>
            <title> (45,809,266 bytes, 0.91%)</title>
            <rect x="0.0000%" y="232" width="0.9061%" height="21" fill="rgb(255,235,235)" fg:x="0" fg:w="45809266"/>
            <text x="0.2500%" y="245.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (45,809,266 bytes, 0.91%)</title>
            <rect x="0.0000%" y="254" width="0.9061%" height="21" fill="rgb(255,235,235)" fg:x="0" fg:w="45809266"/>
            <text x="0.2500%" y="267.50"></text>
        </g>
        <g>
            <title> (45,809,266 bytes, 0.91%)</title>
            <rect x="0.0000%" y="276" width="0.9061%" height="21" fill="rgb(255,235,235)" fg:x="0" fg:w="45809266"/>
            <text x="0.2500%" y="289.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (45,769,515 bytes, 0.91%)</title>
            <rect x="0.0008%" y="298" width="0.9053%" height="21" fill="rgb(255,235,235)" fg:x="39751" fg:w="45769515"/>
            <text x="0.2508%" y="311.50"></text>
        </g>
        <g>
            <title> (45,769,515 bytes, 0.91%)</title>
            <rect x="0.0008%" y="320" width="0.9053%" height="21" fill="rgb(255,235,235)" fg:x="39751" fg:w="45769515"/>
            <text x="0.2508%" y="333.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (45,769,515 bytes, 0.91%)</title>
            <rect x="0.0008%" y="342" width="0.9053%" height="21" fill="rgb(255,235,235)" fg:x="39751" fg:w="45769515"/>
            <text x="0.2508%" y="355.50"></text>
        </g>
        <g>
            <title> (45,769,515 bytes, 0.91%)</title>
            <rect x="0.0008%" y="364" width="0.9053%" height="21" fill="rgb(255,235,235)" fg:x="39751" fg:w="45769515"/>
            <text x="0.2508%" y="377.50"></text>
        </g>
        <g>
            <title>train_no_student.py:26 (&lt;module&gt;) (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="122" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="135.50"></text>
        </g>
        <g>
            <title>from models import * (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="144" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="157.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="166" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="179.50"></text>
        </g>
        <g>
            <title> (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="188" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="201.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="210" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="223.50"></text>
        </g>
        <g>
            <title> (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="232" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="245.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="254" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="267.50"></text>
        </g>
        <g>
            <title> (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="276" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="289.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="298" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="311.50"></text>
        </g>
        <g>
            <title> (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="320" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="333.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="342" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="355.50"></text>
        </g>
        <g>
            <title> (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="364" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="377.50"></text>
        </g>
        <g>
            <title>/home/gc28692/Projects/ECE381K_RWN_Project/src/models.py:10 (&lt;module&gt;) (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="386" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="399.50"></text>
        </g>
        <g>
            <title>from dgl.nn import GraphConv (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="408" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="421.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="430" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="443.50"></text>
        </g>
        <g>
            <title> (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="452" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="465.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:972 (_find_and_load_unlocked) (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="474" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="487.50"></text>
        </g>
        <g>
            <title> (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="496" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="509.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="518" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="531.50"></text>
        </g>
        <g>
            <title> (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="540" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="553.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="562" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="575.50"></text>
        </g>
        <g>
            <title> (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="584" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="597.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="606" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="619.50"></text>
        </g>
        <g>
            <title> (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="628" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="641.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="650" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="663.50"></text>
        </g>
        <g>
            <title> (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="672" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="685.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="694" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="707.50"></text>
        </g>
        <g>
            <title> (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="716" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="729.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="738" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="751.50"></text>
        </g>
        <g>
            <title> (14,771,587 bytes, 0.29%)</title>
            <rect x="0.9061%" y="760" width="0.2922%" height="21" fill="rgb(255,241,241)" fg:x="45809266" fg:w="14771587"/>
            <text x="1.1561%" y="773.50"></text>
        </g>
        <g>
            <title>train_no_student.py:27 (&lt;module&gt;) (13,271,347 bytes, 0.26%)</title>
            <rect x="1.1983%" y="122" width="0.2625%" height="21" fill="rgb(255,242,242)" fg:x="60580853" fg:w="13271347"/>
            <text x="1.4483%" y="135.50"></text>
        </g>
        <g>
            <title>from datasets import * (13,271,347 bytes, 0.26%)</title>
            <rect x="1.1983%" y="144" width="0.2625%" height="21" fill="rgb(255,242,242)" fg:x="60580853" fg:w="13271347"/>
            <text x="1.4483%" y="157.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (13,271,347 bytes, 0.26%)</title>
            <rect x="1.1983%" y="166" width="0.2625%" height="21" fill="rgb(255,242,242)" fg:x="60580853" fg:w="13271347"/>
            <text x="1.4483%" y="179.50"></text>
        </g>
        <g>
            <title> (13,271,347 bytes, 0.26%)</title>
            <rect x="1.1983%" y="188" width="0.2625%" height="21" fill="rgb(255,242,242)" fg:x="60580853" fg:w="13271347"/>
            <text x="1.4483%" y="201.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (13,271,347 bytes, 0.26%)</title>
            <rect x="1.1983%" y="210" width="0.2625%" height="21" fill="rgb(255,242,242)" fg:x="60580853" fg:w="13271347"/>
            <text x="1.4483%" y="223.50"></text>
        </g>
        <g>
            <title> (13,271,347 bytes, 0.26%)</title>
            <rect x="1.1983%" y="232" width="0.2625%" height="21" fill="rgb(255,242,242)" fg:x="60580853" fg:w="13271347"/>
            <text x="1.4483%" y="245.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (13,271,347 bytes, 0.26%)</title>
            <rect x="1.1983%" y="254" width="0.2625%" height="21" fill="rgb(255,242,242)" fg:x="60580853" fg:w="13271347"/>
            <text x="1.4483%" y="267.50"></text>
        </g>
        <g>
            <title> (13,271,347 bytes, 0.26%)</title>
            <rect x="1.1983%" y="276" width="0.2625%" height="21" fill="rgb(255,242,242)" fg:x="60580853" fg:w="13271347"/>
            <text x="1.4483%" y="289.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (13,271,347 bytes, 0.26%)</title>
            <rect x="1.1983%" y="298" width="0.2625%" height="21" fill="rgb(255,242,242)" fg:x="60580853" fg:w="13271347"/>
            <text x="1.4483%" y="311.50"></text>
        </g>
        <g>
            <title> (13,271,347 bytes, 0.26%)</title>
            <rect x="1.1983%" y="320" width="0.2625%" height="21" fill="rgb(255,242,242)" fg:x="60580853" fg:w="13271347"/>
            <text x="1.4483%" y="333.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (13,271,347 bytes, 0.26%)</title>
            <rect x="1.1983%" y="342" width="0.2625%" height="21" fill="rgb(255,242,242)" fg:x="60580853" fg:w="13271347"/>
            <text x="1.4483%" y="355.50"></text>
        </g>
        <g>
            <title> (13,271,347 bytes, 0.26%)</title>
            <rect x="1.1983%" y="364" width="0.2625%" height="21" fill="rgb(255,242,242)" fg:x="60580853" fg:w="13271347"/>
            <text x="1.4483%" y="377.50"></text>
        </g>
        <g>
            <title>/home/gc28692/Projects/ECE381K_RWN_Project/src/datasets.py:10 (&lt;module&gt;) (13,271,347 bytes, 0.26%)</title>
            <rect x="1.1983%" y="386" width="0.2625%" height="21" fill="rgb(255,242,242)" fg:x="60580853" fg:w="13271347"/>
            <text x="1.4483%" y="399.50"></text>
        </g>
        <g>
            <title>from ogb.nodeproppred import DglNodePropPredDataset (13,271,347 bytes, 0.26%)</title>
            <rect x="1.1983%" y="408" width="0.2625%" height="21" fill="rgb(255,242,242)" fg:x="60580853" fg:w="13271347"/>
            <text x="1.4483%" y="421.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (13,271,347 bytes, 0.26%)</title>
            <rect x="1.1983%" y="430" width="0.2625%" height="21" fill="rgb(255,242,242)" fg:x="60580853" fg:w="13271347"/>
            <text x="1.4483%" y="443.50"></text>
        </g>
        <g>
            <title> (13,271,347 bytes, 0.26%)</title>
            <rect x="1.1983%" y="452" width="0.2625%" height="21" fill="rgb(255,242,242)" fg:x="60580853" fg:w="13271347"/>
            <text x="1.4483%" y="465.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="474" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="487.50"></text>
        </g>
        <g>
            <title> (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="496" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="509.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="518" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="531.50"></text>
        </g>
        <g>
            <title> (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="540" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="553.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="562" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="575.50"></text>
        </g>
        <g>
            <title> (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="584" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="597.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="606" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="619.50"></text>
        </g>
        <g>
            <title> (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="628" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="641.50"></text>
        </g>
        <g>
            <title>/home/gc28692/anaconda3/envs/rwn/lib/python3.9/site-packages/ogb/nodeproppred/__init__.py:1 (&lt;module&gt;) (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="650" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="663.50"></text>
        </g>
        <g>
            <title>from .evaluate import Evaluator (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="672" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="685.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="694" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="707.50"></text>
        </g>
        <g>
            <title> (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="716" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="729.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="738" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="751.50"></text>
        </g>
        <g>
            <title> (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="760" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="773.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="782" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="795.50"></text>
        </g>
        <g>
            <title> (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="804" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="817.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="826" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="839.50"></text>
        </g>
        <g>
            <title> (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="848" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="861.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="870" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="883.50"></text>
        </g>
        <g>
            <title> (13,097,324 bytes, 0.26%)</title>
            <rect x="1.2017%" y="892" width="0.2591%" height="21" fill="rgb(255,242,242)" fg:x="60754876" fg:w="13097324"/>
            <text x="1.4517%" y="905.50"></text>
        </g>
        <g>
            <title>train_no_student.py:134 (train) (4,935,652,382 bytes, 97.63%)</title>
            <rect x="1.4615%" y="166" width="97.6253%" height="21" fill="rgb(255,101,101)" fg:x="73889894" fg:w="4935652382"/>
            <text x="1.7115%" y="179.50">train_no_student.py:134 (train)</text>
        </g>
        <g>
            <title>            train_loss.backward() (4,935,652,382 bytes, 97.63%)</title>
            <rect x="1.4615%" y="188" width="97.6253%" height="21" fill="rgb(255,101,101)" fg:x="73889894" fg:w="4935652382"/>
            <text x="1.7115%" y="201.50">            train_loss.backward()</text>
        </g>
        <g>
            <title>/home/gc28692/anaconda3/envs/rwn/lib/python3.9/site-packages/torch/_tensor.py:396 (backward) (4,935,652,382 bytes, 97.63%)</title>
            <rect x="1.4615%" y="210" width="97.6253%" height="21" fill="rgb(255,101,101)" fg:x="73889894" fg:w="4935652382"/>
            <text x="1.7115%" y="223.50">/home/gc28692/anaconda3/envs/rwn/lib/python3.9/site-packages/torch/_tensor.py:396 (backward)</text>
        </g>
        <g>
            <title>        torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs) (4,935,652,382 bytes, 97.63%)</title>
            <rect x="1.4615%" y="232" width="97.6253%" height="21" fill="rgb(255,101,101)" fg:x="73889894" fg:w="4935652382"/>
            <text x="1.7115%" y="245.50">        torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)</text>
        </g>
        <g>
            <title>/home/gc28692/anaconda3/envs/rwn/lib/python3.9/site-packages/torch/autograd/__init__.py:173 (backward) (4,935,652,382 bytes, 97.63%)</title>
            <rect x="1.4615%" y="254" width="97.6253%" height="21" fill="rgb(255,101,101)" fg:x="73889894" fg:w="4935652382"/>
            <text x="1.7115%" y="267.50">/home/gc28692/anaconda3/envs/rwn/lib/python3.9/site-packages/torch/autograd/__init__.py:173 (backward)</text>
        </g>
        <g>
            <title>    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass (4,935,652,382 bytes, 97.63%)</title>
            <rect x="1.4615%" y="276" width="97.6253%" height="21" fill="rgb(255,101,101)" fg:x="73889894" fg:w="4935652382"/>
            <text x="1.7115%" y="289.50">    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass..</text>
        </g>
        <g>
            <title>/home/gc28692/Projects/ECE381K_RWN_Project/src/datasets.py:16 (load_cora) (15,546,064 bytes, 0.31%)</title>
            <rect x="99.0868%" y="254" width="0.3075%" height="21" fill="rgb(255,241,241)" fg:x="5009542276" fg:w="15546064"/>
            <text x="99.3368%" y="267.50"></text>
        </g>
        <g>
            <title>    dataset = CoraGraphDataset() (15,546,064 bytes, 0.31%)</title>
            <rect x="99.0868%" y="276" width="0.3075%" height="21" fill="rgb(255,241,241)" fg:x="5009542276" fg:w="15546064"/>
            <text x="99.3368%" y="289.50"></text>
        </g>
        <g>
            <title>/home/gc28692/anaconda3/envs/rwn/lib/python3.9/site-packages/dgl/data/citation_graph.py:425 (__init__) (15,546,064 bytes, 0.31%)</title>
            <rect x="99.0868%" y="298" width="0.3075%" height="21" fill="rgb(255,241,241)" fg:x="5009542276" fg:w="15546064"/>
            <text x="99.3368%" y="311.50"></text>
        </g>
        <g>
            <title>        super(CoraGraphDataset, self).__init__(name, raw_dir, force_reload, (15,546,064 bytes, 0.31%)</title>
            <rect x="99.0868%" y="320" width="0.3075%" height="21" fill="rgb(255,241,241)" fg:x="5009542276" fg:w="15546064"/>
            <text x="99.3368%" y="333.50"></text>
        </g>
        <g>
            <title>/home/gc28692/anaconda3/envs/rwn/lib/python3.9/site-packages/dgl/data/citation_graph.py:77 (__init__) (15,546,064 bytes, 0.31%)</title>
            <rect x="99.0868%" y="342" width="0.3075%" height="21" fill="rgb(255,241,241)" fg:x="5009542276" fg:w="15546064"/>
            <text x="99.3368%" y="355.50"></text>
        </g>
        <g>
            <title>        super(CitationGraphDataset, self).__init__(name, (15,546,064 bytes, 0.31%)</title>
            <rect x="99.0868%" y="364" width="0.3075%" height="21" fill="rgb(255,241,241)" fg:x="5009542276" fg:w="15546064"/>
            <text x="99.3368%" y="377.50"></text>
        </g>
        <g>
            <title>/home/gc28692/anaconda3/envs/rwn/lib/python3.9/site-packages/dgl/data/dgl_dataset.py:304 (__init__) (15,546,064 bytes, 0.31%)</title>
            <rect x="99.0868%" y="386" width="0.3075%" height="21" fill="rgb(255,241,241)" fg:x="5009542276" fg:w="15546064"/>
            <text x="99.3368%" y="399.50"></text>
        </g>
        <g>
            <title>        super(DGLBuiltinDataset, self).__init__(name, (15,546,064 bytes, 0.31%)</title>
            <rect x="99.0868%" y="408" width="0.3075%" height="21" fill="rgb(255,241,241)" fg:x="5009542276" fg:w="15546064"/>
            <text x="99.3368%" y="421.50"></text>
        </g>
        <g>
            <title>/home/gc28692/anaconda3/envs/rwn/lib/python3.9/site-packages/dgl/data/dgl_dataset.py:99 (__init__) (15,546,064 bytes, 0.31%)</title>
            <rect x="99.0868%" y="430" width="0.3075%" height="21" fill="rgb(255,241,241)" fg:x="5009542276" fg:w="15546064"/>
            <text x="99.3368%" y="443.50"></text>
        </g>
        <g>
            <title>        self._load() (15,546,064 bytes, 0.31%)</title>
            <rect x="99.0868%" y="452" width="0.3075%" height="21" fill="rgb(255,241,241)" fg:x="5009542276" fg:w="15546064"/>
            <text x="99.3368%" y="465.50"></text>
        </g>
        <g>
            <title>/home/gc28692/anaconda3/envs/rwn/lib/python3.9/site-packages/dgl/data/dgl_dataset.py:178 (_load) (15,546,064 bytes, 0.31%)</title>
            <rect x="99.0868%" y="474" width="0.3075%" height="21" fill="rgb(255,241,241)" fg:x="5009542276" fg:w="15546064"/>
            <text x="99.3368%" y="487.50"></text>
        </g>
        <g>
            <title>                self.load() (15,546,064 bytes, 0.31%)</title>
            <rect x="99.0868%" y="496" width="0.3075%" height="21" fill="rgb(255,241,241)" fg:x="5009542276" fg:w="15546064"/>
            <text x="99.3368%" y="509.50"></text>
        </g>
        <g>
            <title>/home/gc28692/anaconda3/envs/rwn/lib/python3.9/site-packages/dgl/data/citation_graph.py:195 (load) (15,546,064 bytes, 0.31%)</title>
            <rect x="99.0868%" y="518" width="0.3075%" height="21" fill="rgb(255,241,241)" fg:x="5009542276" fg:w="15546064"/>
            <text x="99.3368%" y="531.50"></text>
        </g>
        <g>
            <title>        graphs, _ = load_graphs(str(graph_path)) (15,546,064 bytes, 0.31%)</title>
            <rect x="99.0868%" y="540" width="0.3075%" height="21" fill="rgb(255,241,241)" fg:x="5009542276" fg:w="15546064"/>
            <text x="99.3368%" y="553.50"></text>
        </g>
        <g>
            <title>/home/gc28692/anaconda3/envs/rwn/lib/python3.9/site-packages/dgl/data/graph_serialize.py:182 (load_graphs) (15,546,064 bytes, 0.31%)</title>
            <rect x="99.0868%" y="562" width="0.3075%" height="21" fill="rgb(255,241,241)" fg:x="5009542276" fg:w="15546064"/>
            <text x="99.3368%" y="575.50"></text>
        </g>
        <g>
            <title>        return load_graph_v2(filename, idx_list) (15,546,064 bytes, 0.31%)</title>
            <rect x="99.0868%" y="584" width="0.3075%" height="21" fill="rgb(255,241,241)" fg:x="5009542276" fg:w="15546064"/>
            <text x="99.3368%" y="597.50"></text>
        </g>
        <g>
            <title>/home/gc28692/anaconda3/envs/rwn/lib/python3.9/site-packages/dgl/data/graph_serialize.py:192 (load_graph_v2) (15,546,064 bytes, 0.31%)</title>
            <rect x="99.0868%" y="606" width="0.3075%" height="21" fill="rgb(255,241,241)" fg:x="5009542276" fg:w="15546064"/>
            <text x="99.3368%" y="619.50"></text>
        </g>
        <g>
            <title>    heterograph_list = _CAPI_LoadGraphFiles_V2(filename, idx_list) (15,546,064 bytes, 0.31%)</title>
            <rect x="99.0868%" y="628" width="0.3075%" height="21" fill="rgb(255,241,241)" fg:x="5009542276" fg:w="15546064"/>
            <text x="99.3368%" y="641.50"></text>
        </g>
        <g>
            <title>train_no_student.py:36 (train) (23,568,628 bytes, 0.47%)</title>
            <rect x="99.0868%" y="166" width="0.4662%" height="21" fill="rgb(255,239,239)" fg:x="5009542276" fg:w="23568628"/>
            <text x="99.3368%" y="179.50"></text>
        </g>
        <g>
            <title>    dataset_nx, dataset_dgl, dataset = load_dataset(args.dataset) (23,568,628 bytes, 0.47%)</title>
            <rect x="99.0868%" y="188" width="0.4662%" height="21" fill="rgb(255,239,239)" fg:x="5009542276" fg:w="23568628"/>
            <text x="99.3368%" y="201.50"></text>
        </g>
        <g>
            <title>train_no_student.py:259 (load_dataset) (23,568,628 bytes, 0.47%)</title>
            <rect x="99.0868%" y="210" width="0.4662%" height="21" fill="rgb(255,239,239)" fg:x="5009542276" fg:w="23568628"/>
            <text x="99.3368%" y="223.50"></text>
        </g>
        <g>
            <title>        return load_cora() (23,568,628 bytes, 0.47%)</title>
            <rect x="99.0868%" y="232" width="0.4662%" height="21" fill="rgb(255,239,239)" fg:x="5009542276" fg:w="23568628"/>
            <text x="99.3368%" y="245.50"></text>
        </g>
        <g>
            <title>all (5,055,712,656 bytes, 100%)</title>
            <rect x="0.0000%" y="100" width="100.0000%" height="21" fill="rgb(255,100,100)" fg:x="0" fg:w="5055712656"/>
            <text x="0.2500%" y="113.50"></text>
        </g>
        <g>
            <title>train_no_student.py:390 (&lt;module&gt;) (4,981,822,762 bytes, 98.54%)</title>
            <rect x="1.4615%" y="122" width="98.5385%" height="21" fill="rgb(255,101,101)" fg:x="73889894" fg:w="4981822762"/>
            <text x="1.7115%" y="135.50">train_no_student.py:390 (&lt;module&gt;)</text>
        </g>
        <g>
            <title>    train(args) (4,981,822,762 bytes, 98.54%)</title>
            <rect x="1.4615%" y="144" width="98.5385%" height="21" fill="rgb(255,101,101)" fg:x="73889894" fg:w="4981822762"/>
            <text x="1.7115%" y="157.50">    train(args)</text>
        </g>
        <g>
            <title>train_no_student.py:88 (train) (12,335,610 bytes, 0.24%)</title>
            <rect x="99.7560%" y="166" width="0.2440%" height="21" fill="rgb(255,242,242)" fg:x="5043377046" fg:w="12335610"/>
            <text x="100.0060%" y="179.50"></text>
        </g>
        <g>
            <title>            logits = teacher_model(partition, features) (12,335,610 bytes, 0.24%)</title>
            <rect x="99.7560%" y="188" width="0.2440%" height="21" fill="rgb(255,242,242)" fg:x="5043377046" fg:w="12335610"/>
            <text x="100.0060%" y="201.50"></text>
        </g>
        <g>
            <title>/home/gc28692/anaconda3/envs/rwn/lib/python3.9/site-packages/torch/nn/modules/module.py:1130 (_call_impl) (12,335,610 bytes, 0.24%)</title>
            <rect x="99.7560%" y="210" width="0.2440%" height="21" fill="rgb(255,242,242)" fg:x="5043377046" fg:w="12335610"/>
            <text x="100.0060%" y="223.50"></text>
        </g>
        <g>
            <title>            return forward_call(*input, **kwargs) (12,335,610 bytes, 0.24%)</title>
            <rect x="99.7560%" y="232" width="0.2440%" height="21" fill="rgb(255,242,242)" fg:x="5043377046" fg:w="12335610"/>
            <text x="100.0060%" y="245.50"></text>
        </g>
    </svg>
</svg>